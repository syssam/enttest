// Code generated by ent, DO NOT EDIT.

package hashtag

const (
	// Label holds the string label denoting the hashtag type in the database.
	Label = "hashtag"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "hashtag_id"
	// EdgePost holds the string denoting the post edge name in mutations.
	EdgePost = "post"
	// EdgeHashtagToPost holds the string denoting the hashtag_to_post edge name in mutations.
	EdgeHashtagToPost = "hashtag_to_post"
	// PostFieldID holds the string denoting the ID field of the Post.
	PostFieldID = "post_id"
	// HashtagToPostFieldID holds the string denoting the ID field of the HashtagToPost.
	HashtagToPostFieldID = "hashtag_to_post_id"
	// Table holds the table name of the hashtag in the database.
	Table = "hashtags"
	// PostTable is the table that holds the post relation/edge. The primary key declared below.
	PostTable = "hashtag_to_posts"
	// PostInverseTable is the table name for the Post entity.
	// It exists in this package in order to avoid circular dependency with the "post" package.
	PostInverseTable = "posts"
	// HashtagToPostTable is the table that holds the hashtag_to_post relation/edge.
	HashtagToPostTable = "hashtag_to_posts"
	// HashtagToPostInverseTable is the table name for the HashtagToPost entity.
	// It exists in this package in order to avoid circular dependency with the "hashtagtopost" package.
	HashtagToPostInverseTable = "hashtag_to_posts"
	// HashtagToPostColumn is the table column denoting the hashtag_to_post relation/edge.
	HashtagToPostColumn = "hashtag_id"
)

// Columns holds all SQL columns for hashtag fields.
var Columns = []string{
	FieldID,
}

var (
	// PostPrimaryKey and PostColumn2 are the table columns denoting the
	// primary key for the post relation (M2M).
	PostPrimaryKey = []string{"post_id", "hashtag_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
