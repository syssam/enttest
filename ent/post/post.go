// Code generated by ent, DO NOT EDIT.

package post

const (
	// Label holds the string label denoting the post type in the database.
	Label = "post"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "post_id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// EdgeHashtags holds the string denoting the hashtags edge name in mutations.
	EdgeHashtags = "hashtags"
	// EdgeHashtagToPost holds the string denoting the hashtag_to_post edge name in mutations.
	EdgeHashtagToPost = "hashtag_to_post"
	// HashtagFieldID holds the string denoting the ID field of the Hashtag.
	HashtagFieldID = "hashtag_id"
	// HashtagToPostFieldID holds the string denoting the ID field of the HashtagToPost.
	HashtagToPostFieldID = "hashtag_to_post_id"
	// Table holds the table name of the post in the database.
	Table = "posts"
	// HashtagsTable is the table that holds the hashtags relation/edge. The primary key declared below.
	HashtagsTable = "hashtag_to_posts"
	// HashtagsInverseTable is the table name for the Hashtag entity.
	// It exists in this package in order to avoid circular dependency with the "hashtag" package.
	HashtagsInverseTable = "hashtags"
	// HashtagToPostTable is the table that holds the hashtag_to_post relation/edge.
	HashtagToPostTable = "hashtag_to_posts"
	// HashtagToPostInverseTable is the table name for the HashtagToPost entity.
	// It exists in this package in order to avoid circular dependency with the "hashtagtopost" package.
	HashtagToPostInverseTable = "hashtag_to_posts"
	// HashtagToPostColumn is the table column denoting the hashtag_to_post relation/edge.
	HashtagToPostColumn = "post_id"
)

// Columns holds all SQL columns for post fields.
var Columns = []string{
	FieldID,
	FieldTitle,
}

var (
	// HashtagsPrimaryKey and HashtagsColumn2 are the table columns denoting the
	// primary key for the hashtags relation (M2M).
	HashtagsPrimaryKey = []string{"post_id", "hashtag_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultTitle holds the default value on creation for the "title" field.
	DefaultTitle string
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
	// IDValidator is a validator for the "id" field. It is called by the builders before save.
	IDValidator func(string) error
)
